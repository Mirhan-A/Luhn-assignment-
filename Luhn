# Throughout this project, the use of data structures are not permitted 
# Minimal built in functions are to be used and the majority of functions must be
# created yourself

# More packages may be imported in the space below if approved by your instructor 

def printMenu():
    print('''
          Customer and Sales System\n
          1. Enter Customer Information\n
          2. Generate Customer data file\n
          3. Report on total Sales (Not done in this part)\n
          4. Check for fraud in sales data (Not done in this part)\n
          9. Quit\n
          Enter menu option (1-9)
          ''')

'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
# Mirhan
def enterCustomerInfo():
    first_name = input("Enter your first name: ")
    last_name = input("Enter your last name: ") 
    city = input("Enter the city that you live in: ") 
    postal_code = input("Enter your postal code: ") 
    
    while True: 
        credit_card_number = input("Enter your credit card number: ")
        if len(credit_card_number) <=19 and len(credit_card_number) >= 9 and credit_card_number.isdigit(): 
            break 
        else: 
            print("Please type in your entire credit card number, which is between 9 to 19 digits.")
   
    return first_name, last_name, city, credit_card_number, postal_code

'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
# Michelle
def validatePostalCode():
   try:
        with open("postal_codes.csv", "r") as file:
            valid_prefixes = []
            for line in file:
 valid_prefixes = []
            for line in file:
                # Split each line at '|' and extract the first field (postal code)
                fields = []
                for char in line: 
                    if char != '|':
                        fields.append(char)
                    else:
                        break
                prefix = "".join(fields[:3]) 
                if prefix not in valid_prefixes:
                    valid_prefixes.append(prefix)
    except FileNotFoundError:
        print("Error: postal_codes.csv file not found.")
        return

    postal_code = input("Enter a postal code to validate: ").strip()

    if len(postal_code) < 3:
        print("Invalid: Postal code must be at least 3 characters long.")
        return

    input_prefix = postal_code[:3]  
    is_valid = False
    for valid_prefix in valid_prefixes:
        if valid_prefix == input_prefix:
            is_valid = True
            break

Return result
    if is_valid:
        print("Valid postal code.")
    else:
        print("Invalid postal code.")

'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
# Mirhan
def validateCreditCard():
    pass    # Remove this pass statement and add your own code below

'''
    This function is to be edited to achieve the task.
    It is your decision to make this function a procedural or functional type
    You may place as many or as few parameters as needed
    This function may also be broken down further depending on your algorithm/approach
'''
# Michelle 
def generateCustomerDataFile():
    pass    # Remove this pass statement and add your own code below

####################################################################
#       ADDITIONAL METHODS MAY BE ADDED BELOW IF NECESSARY         #
####################################################################




####################################################################
#                            MAIN PROGRAM                          #
#           DO NOT EDIT ANY CODE EXCEPT WHERE INDICATED            #
####################################################################

# Do not edit any of these variables
userInput = ""
enterCustomerOption = "1"
generateCustomerOption = "2"
exitCondition = "9"

# More variables for the main may be declared in the space below


while userInput != exitCondition:
    printMenu()                 # Printing out the main menu
    userInput = input();        # User selection from the menu

    if userInput == enterCustomerOption:
        # Only the line below may be editted based on the parameter list and how you design the method return
        # Any necessary variables may be added to this if section, but nowhere else in the code
        enterCustomerInfo()

    elif userInput == generateCustomerOption: 
        # Only the line below may be editted based on the parameter list and how you design the method return
        generateCustomerDataFile()

    else:
        print("Please type in a valid option (A number from 1-9)")

#Exits once the user types 
print("Program Terminated")
